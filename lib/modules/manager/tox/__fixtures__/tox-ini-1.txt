# Based from https://github.com/tox-dev/tox/blob/master/tox.ini
# and https://tox.wiki/en/latest/config.html#substitution-for-values-from-other-sections
[tox]
envlist =
    fix_lint
    py310
    py39
    py38
    py37
    py36
    py35
    py27
    pypy3
    pypy
    coverage
    docs
    readme
isolated_build = true
skip_missing_interpreters = true
minversion = 3.12

[testenv]
description = deps are fine in a basic test env 
passenv =
    CURL_CA_BUNDLE
    PIP_CACHE_DIR
    PYTEST_*
    REQUESTS_CA_BUNDLE
    SSL_CERT_FILE
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    {py27,pypy}: PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
extras =
    testing
# It can be anywhere
deps =
    base-test-env==1.0.0
commands =
    pytest \
      --cov "{envsitepackagesdir}/tox" \
      --cov-config "{toxinidir}/tox.ini" \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      {posargs:.}

[testenv:basic]
description = The normal case 
passenv =
    *
basepython = python3.10
deps =
    basic1>=3.1.24
    basic2>=21.3
    basic3<=21.3
    basic4<1.0.0
    basic5>1.0.0
    basic6==1.0.0
    basic7~=1.0.0
commands =
    python {toxinidir}/tasks/release.py --version {posargs}
[testenv:single-line-deps]
# Single line dep is valid
deps = single-line>=2.9.3
commands =
    pytest \
      --cov "{envsitepackagesdir}/tox" \
      --cov-config "{toxinidir}/tox.ini" \
      --junitxml {toxworkdir}/junit.{envname}.xml \
      {posargs:.}

[testenv:comment-deps]
description = commented deps should probably not be bumped 
passenv =
    {[testenv]passenv}
    PRE_COMMIT_HOME
    PROGRAMDATA
basepython = python3.10
skip_install = true
deps =
    comment-deps1>=2.16
    # Deps with comments - # is common in python ; is ini commenting
    # comment-deps2>=2.16
    ; comment-deps3==2.16
extras =
    lint
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:with-an=sign]
description = test envs can have odd names, hence the (.*)
basepython = python3.10
deps = 
    equals1>=1.19.4 
extras =
    docs
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W --keep-going -n -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:deps-matrix]
description = deps matrix should also bump 
basepython = python3.9
skip_install = true
# These are usually set for a reason, so they should not be bumped
deps =
    py34-mysql: matrix1 # use if both py34 and mysql are in the env name
    py27,py36: matrix2 # use if either py36 or py27 are in the env name
    py{27,36}-sqlite: matrix3 # mocking sqlite in python 2.x & 3.6
    !py34-sqlite: matrix4 # mocking sqlite, except in python 3.4
    sqlite-!py34: matrix5 # (same as the line above)
    !py34-!py36: matrix6 # use if neither py34 nor py36 are in the env name
    django15: matrix7>=1.5,<1.6
    django16: matrix8>=1.6,<1.7
    py36: matrix9 
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:all-combinations]
description = combining every case 
basepython = python3.9
skip_install = true
deps =
    dep-combos1 
    dep-combos2==1.0.0
    # Don't parse with : because they are set for a reason
    py34-mysql: dep-combos3 # use if both py34 and mysql are in the env name
    py27,py36: dep-combos4==1.0.0 # use if either py36 or py27 are in the env name
    py{27,36}-sqlite: dep-combos5>=1.0.0 # mocking sqlite in python 2.x & 3.6
    !py34-sqlite: dep-combos6<=1.0.0 # mocking sqlite, except in python 3.4
    sqlite-!py34: dep-combos7~=1.0 # (same as the line above)
    !py34-!py36: dep-combos8>=1.0 # use if neither py34 nor py36 are in the env name
    -r{toxinidir}/doc/en/requirements.txt
    {[testenv:release]deps}
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:blank-deps]
description = blank deps are ok, but don't do anything 
basepython = python3.10
skip_install = true
deps =
commands =
    python3.10 -c "import sys; sys.exit(139)"

[testenv:requirements-file]
description = These are managed elsewhere, just don't do anything 
deps = 
    -r{toxinidir}/doc/en/requirements.txt
commands =
    echo {posargs}

[testenv:dep-inheritance]
description = Can get deps from another env, don't do anything 
usedevelop = true
deps =
    {[testenv:release]deps}
extras =
    docs
    testing
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

# And other random sections can be present
[flake8]
max-complexity = 22
max-line-length = 99
ignore = E203, W503, C901, E402, B011

[pep8]
max-line-length = 99

# Config can also be in a setup.cfg, so don't parse these
[options]
zip_safe = true
include_package_data = true
python_requires = >= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.5.1
packages = find:
test_suite = tests
install_requires =
    quux >=5.5.5
    python-dateutil ~=2.1
    foo >=1.1.1
    baz >=3.3.3.
    docopt ~=0.4
    fs ~=2.1
    nmspc.pkg ==1.0

    requests[security] ~=2.18
    compact~=1.2.3;python>'3.10'

setup_requires =
    six ~=1.4
    tqdm ~=4.19
    tenacity ~=6.0
tests_require =
    typing ~=3.6    ; python_version < '3.6'
    verboselogs ~=1.7  # verboselogs
    instalooter[test]

[options.extras_require]
testing =
    argcomplete
    hypothesis>=3.56
    mock
    nose
    pygments>=2.7.2
    requests
    xmlschema
